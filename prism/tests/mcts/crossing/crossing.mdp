mdp
 
module robot
 
rob_x:[1..3] init 3;
rob_y:[1..3] init 3;

[up] (rob_y<3) ->  1.0:(rob_y' = rob_y + 1);
[down] (rob_y>1) -> 1.0:(rob_y' = rob_y - 1);
[right] (rob_x<3) -> 1.0:(rob_x' = rob_x + 1);
[left] (rob_x>1) -> 1.0:(rob_x' = rob_x - 1);
[noop] true -> true;

endmodule

module x3y2

x3y2:[0..1] init 0;

[up] true -> 0.7:(x3y2'=0) + 0.3:(x3y2'=1);
[down] true -> 0.7:(x3y2'=0) + 0.3:(x3y2'=1);
[right] true -> 0.7:(x3y2'=0) + 0.3:(x3y2'=1);
[left] true -> 0.7:(x3y2'=0) + 0.3:(x3y2'=1);
[noop] true -> 0.7:(x3y2'=0) + 0.3:(x3y2'=1);

endmodule

module x1y2

x1y2:[0..1] init 0;

[up] (x2y2=1) -> 1:(x1y2'=1);
[up] (x2y2=0) -> 1:(x1y2'=0);
[down] (x2y2=1) -> 1:(x1y2'=1);
[down] (x2y2=0) -> 1:(x1y2'=0);
[right] (x2y2=1) -> 1:(x1y2'=1);
[right] (x2y2=0) -> 1:(x1y2'=0);
[left] (x2y2=1) -> 1:(x1y2'=1);
[left] (x2y2=0) -> 1:(x1y2'=0);
[noop] (x2y2=1) -> 1:(x1y2'=1);
[noop] (x2y2=0) -> 1:(x1y2'=0);

endmodule

module x2y2

x2y2:[0..1] init 0;

[up] (x3y2=1) -> 1:(x2y2'=1);
[up] (x3y2=0) -> 1:(x2y2'=0);
[down] (x3y2=1) -> 1:(x2y2'=1);
[down] (x3y2=0) -> 1:(x2y2'=0);
[right] (x3y2=1) -> 1:(x2y2'=1);
[right] (x3y2=0) -> 1:(x2y2'=0);
[left] (x3y2=1) -> 1:(x2y2'=1);
[left] (x3y2=0) -> 1:(x2y2'=0);
[noop] (x3y2=1) -> 1:(x2y2'=1);
[noop] (x3y2=0) -> 1:(x2y2'=0);

endmodule


label "crash" = (rob_x=3 & rob_y=2 & x3y2=1) | (rob_x=2 & rob_y=2 & x2y2=1) | (rob_x=1 & rob_y=2 & x1y2=1);



//rewards "time"
//   [metric_map_at_WayPoint1] (waypoint=1):240.0;
//   [metric_map_at_WayPoint2] (waypoint=2):240.0;
//   [metric_map_at_WayPoint3] (waypoint=3):240.0;
//   [metric_map_at_WayPoint4] (waypoint=4):240.0;


//endrewards
