mdp

module robot

loc:[-1..4] init 0;
rob_con:[0..1] init 1;

[move01] (loc = 0) & (rob_con = 1) -> 0.7:(loc'=1) + 0.3:(loc'=-1);
[move10] (loc = 1) & (rob_con = 1) -> 0.7:(loc'=0) + 0.3:(loc'=-1);
[move12] (loc = 1) & (rob_con = 1) -> 0.7:(loc'=2) + 0.3:(loc'=-1);
[move21] (loc = 2) & (rob_con = 1) -> 0.7:(loc'=1) + 0.3:(loc'=-1);
[move23] (loc = 2) & (rob_con = 1) -> 0.7:(loc'=3) + 0.3:(loc'=-1);
[move32] (loc = 3) & (rob_con = 1) -> 0.7:(loc'=2) + 0.3:(loc'=-1);
[move34] (loc = 3) & (rob_con = 1) -> 0.7:(loc'=4) + 0.3:(loc'=-1);
[move43] (loc = 4) & (rob_con = 1) -> 0.7:(loc'=3) + 0.3:(loc'=-1);

[take_control] (rob_con=0) -> 1.0:(rob_con'=1);
[give_control] (rob_con=1) -> 1.0:(rob_con'=0);

[hmove01] (loc = 0) & (rob_con = 0) & (human_level = 0) -> 0.6:(loc'=1) + 0.4:(loc'=-1);
[hmove12] (loc = 1) & (rob_con = 0) & (human_level = 0) -> 0.6:(loc'=2) + 0.4:(loc'=-1);
[hmove23] (loc = 2) & (rob_con = 0) & (human_level = 0) -> 0.6:(loc'=3) + 0.4:(loc'=-1);
[hmove34] (loc = 3) & (rob_con = 0) & (human_level = 0) -> 0.6:(loc'=4) + 0.4:(loc'=-1);

[hmove01] (loc = 0) & (rob_con = 0) & (human_level = 1) -> 0.8:(loc'=1) + 0.2:(loc'=-1);
[hmove12] (loc = 1) & (rob_con = 0) & (human_level = 1) -> 0.8:(loc'=2) + 0.2:(loc'=-1);
[hmove23] (loc = 2) & (rob_con = 0) & (human_level = 1) -> 0.8:(loc'=3) + 0.2:(loc'=-1);
[hmove34] (loc = 3) & (rob_con = 0) & (human_level = 1) -> 0.8:(loc'=4) + 0.2:(loc'=-1);

[hmove01] (loc = 0) & (rob_con = 0) & (human_level = 2) -> 1.0:(loc'=1) + 0.0:(loc'=-1);
[hmove12] (loc = 1) & (rob_con = 0) & (human_level = 2) -> 1.0:(loc'=2) + 0.0:(loc'=-1);
[hmove23] (loc = 2) & (rob_con = 0) & (human_level = 2) -> 1.0:(loc'=3) + 0.0:(loc'=-1);
[hmove34] (loc = 3) & (rob_con = 0) & (human_level = 2) -> 1.0:(loc'=4) + 0.0:(loc'=-1);

endmodule


module human_power

human_level:[0..2] init 2;

[move01] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);
[move10] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);
[move12] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);
[move21] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);
[move23] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);
[move32] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);
[move34] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);
[move43] (human_level < 2) -> 0.1:(human_level' = human_level + 1) + 0.9:(human_level' = human_level);

[hmove01] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove12] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove23] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove34] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);

[hmove01] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove12] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove23] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove34] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);

[hmove01] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove12] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove23] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);
[hmove34] (human_level > 0) -> 0.1:(human_level' = human_level - 1) + 0.9:(human_level' = human_level);




[move01] (human_level = 2) -> 1.0:(human_level' = human_level);
[move10] (human_level = 2) -> 1.0:(human_level' = human_level);
[move12] (human_level = 2) -> 1.0:(human_level' = human_level);
[move21] (human_level = 2) -> 1.0:(human_level' = human_level);
[move23] (human_level = 2) -> 1.0:(human_level' = human_level);
[move32] (human_level = 2) -> 1.0:(human_level' = human_level);
[move34] (human_level = 2) -> 1.0:(human_level' = human_level);
[move43] (human_level = 2) -> 1.0:(human_level' = human_level);

[hmove01] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove12] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove23] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove34] (human_level = 0) -> 1.0:(human_level' = human_level);

[hmove01] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove12] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove23] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove34] (human_level = 0) -> 1.0:(human_level' = human_level);

[hmove01] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove12] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove23] (human_level = 0) -> 1.0:(human_level' = human_level);
[hmove34] (human_level = 0) -> 1.0:(human_level' = human_level);




endmodule


rewards "human_cost"

[hmove01] (human_level = 0):1.0;
[hmove12] (human_level = 0):1.0;
[hmove23] (human_level = 0):1.0;
[hmove34] (human_level = 0):1.0;


[hmove01] (human_level = 1):1.0;
[hmove12] (human_level = 1):1.0;
[hmove23] (human_level = 1):1.0;
[hmove34] (human_level = 1):1.0;


[hmove01] (human_level = 2):1.0;
[hmove12] (human_level = 2):1.0;
[hmove23] (human_level = 2):1.0;
[hmove34] (human_level = 2):1.0;

endrewards

